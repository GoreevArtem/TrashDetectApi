# docker-compose.yml

version: '3.8'

services:
  api:
    stdin_open: true
    container_name: api
    build: ./backend
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0'
#    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000'
    volumes:
      - .:/app
      - ./source_users_photo:/../source_users_photo:rw
    ports:
      - "8008:8000"
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - network
  db:
    image: postgres:13-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    restart: always
    env_file: .env
    networks:
      - network
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    env_file: .env
    expose:
      - 6379
    networks:
      - network
  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - network
  client:
    stdin_open: true
    container_name: front
    restart: always
    ports:
      - "4000:3001"
    build:
      dockerfile: Dockerfile
      context: ./frontend
    networks:
      - network

  nginx:
    depends_on:
      - client
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - network

volumes:
  postgres_data:

networks:
  network:
    driver: bridge